//  $Revision: 348 $
//
//  $Date: 2011-01-24 14:11:52 +0200 (Mon, 24 Jan 2011) $
//
//SERVER   @DN29_ATLAS
//CONNECT  NPUD00/CONTROL

DATABASE MCPE
PACKAGE  putty.bulk
//USING    Bbd.Portal
OUTPUT   Reply
SERVER   PUTTY

TABLE   Reply
  Id            Sequence
  MessageID     int      
  QueueID       char (16)
  MessageLen    int         //int creates number(10) which is out of sync with the database number(5)
  MessageData   blob (32000)
  MessageType   int  (XMLT=0 Text=1 File=2)
  DateCreated   timestamp
  UserCreated   char (16) NULL
  Status        int  (None=0 Sent=1 Complete=2 Error=3)
  USId          char (16)
  Tmstamp       timestamp

GRANT DELETE TO PUBLIC
GRANT INSERT TO PUBLIC
GRANT SELECT TO PUBLIC
GRANT UPDATE TO PUBLIC

KEY     SYS_C00808
PRIMARY
  ID

KEY key1
  MessageID

KEY key2
  QueueId
  Status

link Message
   MessageID
//// //   DELETE CASCADE

link Queue
   Queueid


PROC    Insert
PROC    Update
PROC    DeleteOne
PROC    SelectOne// //  $PYTHON
PROC    SelectOneUpd
PROC    Exists
PROC    SelectAll
PROC    Count

//# used by tcpout
PROC GetById
INPUT
  Id            Int
OUTPUT (Single)
  Id            int
  MessageID     int
  MessageLen    =
  MessageData   =
  MessageType   int
  Status        int
  Reference     char  (64)
SQLCODE
  SELECT
    r.Id           ,
    r.MessageID    ,
    r.MessageLen   ,
    r.MessageData  ,
    r.MessageType  ,
    r.Status       ,
    m.Reference
  FROM
     Reply r, Message m
  Where
         r.id = :id
     and m.id = r.messageid
ENDCODE

//# used by tcpout
PROC Queued
INPUT
  Queue         char  (16)
  DayInterval   int
  Status        int
OUTPUT //(Multiple)
  Id            Int
SQLCODE
  SELECT
     Id
  FROM
     Reply
  Where
     Queueid = :Queue
     and Status = :Status
     and DateCreated <= CURRENT_TIMESTAMP
     and DateCreated > DATEADD(day,-:DayInterval, CURRENT_TIMESTAMP)
  ORDER BY Id
ENDCODE

//# used by tcpout
PROC UpdateStatus
INPUT
  Id            Int
  Status        int
  USId          char  (16)
SQLCODE
    update Reply set
      Status  = :Status
    , USId    = :USId
    , TMStamp = CURRENT_TIMESTAMP
    where Id = :Id
ENDCODE

// Used by front end tester
PROC ByQueueDate
INPUT
  QueueId      char(16)
  DateFrom     DateTime
  DateTo       DateTime
  MaxRows      int
OUTPUT //(Multiple)
  Id           int
  SourceSysid  char(16)
  Reference    char(64)
  MessageType  int
  DateCreated  DateTime
  Priority     int
  Status       int
SQLCODE
  select R.Id,  M.SourceSysid, M.Reference,  R.MessageType,
             R.DateCreated, M.Priority,  R.Status
  from Reply R, Message M
  where R.QueueId = :QueUeId
  and R.DateCreated
    between :DateFrom and :DateTo
  and R.MessageId = M.Id
  and (:MaxRows <= 0 or :MaxRows >= ROWNUM)
ENDCODE

// Used by front end tester
PROC ByDate
INPUT
  DateFrom     DateTime
  DateTo       DateTime
  MaxRows      int
OUTPUT //(Multiple)
  Id           int
  QueueId      char(16)
  SourceSysid  char(16)
  Reference    char(64)
  MessageType  int
  DateCreated  DateTime
  Priority     int
  Status       int
SQLCODE
  select R.Id, R.QueueId, M.SourceSysid, M.Reference,  R.MessageType,
             R.DateCreated, M.Priority,  R.Status
  from Reply R, Message M
  where R.DateCreated
    between :DateFrom and :DateTo
  and R.MessageId = M.Id
  and (:MaxRows <= 0 or :MaxRows >= ROWNUM)
ENDCODE

// Used by front end tester
PROC Queues
INPUT
  DateFrom     DateTime
  DateTo       DateTime
OUTPUT //(Multiple)
  Id Char(16)
  Name Char(64)
  Descr Char(256)
  NoOf int
SQLCODE
  select Q.Id, Q.Name, Q.Descr, count(*) NoOf
  from Queue Q, Reply R
  where R.DateCreated
    between :DateFrom and :DateTo
  and R.QueueId = Q.Id
  group by Q.Id, Q.Name, Q.Descr
ENDCODE

// Used by front end tester
PROC GetData
INPUT
  Id           int
OUTPUT (Single)
  MessageType   int
  MessageLen    =
  MessageData   =
SQLCODE
  select MessageType, MessageLen, MessageData
  from Reply
  where Id = :Id
ENDCODE

//# Used By Router
PROC Route
INPUT
  Id            int
  QueueId       char  (16)
  USId          char  (16)
SQLCODE
    update
       Reply
    SET
        QueueId = :QueueId
      , USId    = :USId
      , TMStamp = CURRENT_TIMESTAMP
    where
      Id = :Id
ENDCODE


//# used by Rutter
PROC ForUpd
INPUT
  Id            int
  QueueId       char  (16)
  Status        int
OUTPUT (single)
  MessageID         int
  MessageLen        =
  MessageData       =
  MessageType       int
  DateCreated       datetime
  Status            int
  ResponseQueue     char  (16)
  MessageReference  char  (64)
SQLCODE
   BEGIN TRANSACTION
   SELECT
      r.MessageID
     ,r.MessageLen
     ,r.MessageData
     ,r.MessageType
     ,r.DateCreated
     ,r.Status
     ,m.ResponseQueue
     ,m.Reference
   FROM
      Reply r, Message m 
      WITH (ROWLOCK)
   WHERE
          r.ID = :ID
      AND r.Queueid = :Queueid
      AND r.Status = :Status
      and m.id = r.MessageID
ENDCODE
//      for update

//# used by Rutter
PROC ForUpdeximbill
INPUT
  Id            int
  QueueId       char  (16)
  Status        int
OUTPUT (single)
  MessageID     int
//  QueueID       char (16)
  MessageLen    =
  MessageData   =
  MessageType   int
  DateCreated   datetime
  Status        int
  ResponseQueue char  (16)
  MessageReference char(64)
SQLCODE
   SELECT
      r.MessageID
     ,r.QueueID
     ,r.MessageLen
     ,r.MessageData
     ,r.MessageType
     ,r.DateCreated
     ,r.Status
     ,m.ResponseQueue
     ,m.Reference
   FROM
      Reply r, Message m
   WHERE
          r.ID = :ID
      AND r.Queueid = :Queueid
      AND r.Status = :Status
      and m.id = r.MessageID
ENDCODE
//      for update

//# used by Rutter
PROC UpdStatus
INPUT
  Id            int
  Status        int
  USId          char  (16)
SQLCODE
  Update
    Reply
  Set
     Status = :Status
     ,USId = :USId
     ,TMStamp = CURRENT_TIMESTAMP
  where
     id = :Id
ENDCODE

//# Used By PE Front End
PROC ByQueue
INPUT
   InQueue        char(16)
   InStatus       int
   InDateFrom     DateTime
   InDateTo       DateTime
OUTPUT//(Multiple)
   Id             int
   MessageID      int
   QueueID        char (16)
   MessageLen     int
   MessageType    int  (XMLT=0 Text=1)
   DateCreated    datetime
   UserCreated   char (16)
   Status         int  (None=0 Pending=1 Complete=2 Error=3)
   USId           char (16)
   Tmstamp        timestamp
SQLCODE
   SELECT
     Id
     ,MessageID
     ,QueueID
     ,MessageLen
     ,MessageType
     ,DateCreated
     ,UserCreated
     ,Status
     ,USId
     ,Tmstamp
   FROM
      Reply
   WHERE
          QueueId = :InQueue
      AND Status = :InStatus
      AND DateCreated between :InDateFrom
      AND                     :InDateTo
      ORDER BY Id
ENDCODE

//# Used By PE Front End
PROC ByQueueAll
INPUT
   InQueue        char(16)
   InDateFrom     DateTime
   InDateTo       DateTime
OUTPUT//(Multiple)
   Id             int
   MessageID      int
   QueueID        char (16)
   MessageLen     int
   MessageType    int  (XMLT=0 Text=1)
   DateCreated    datetime
   Status         int  (None=0 Pending=1 Complete=2 Error=3)
   USId           char (16)
   Tmstamp        timestamp
SQLCODE
   SELECT
     Id
     ,MessageID
     ,QueueID
     ,MessageLen
     ,MessageType
     ,DateCreated
     ,Status
     ,USId
     ,Tmstamp
   FROM
      Reply
   WHERE
          QueueId = :InQueue
      AND DateCreated between :InDateFrom
      AND                     :InDateTo
      ORDER BY Id
ENDCODE

//# Used By PE Front End
PROC ByMsgIDQueue
INPUT
   InMessageID    int
   InQueue        char(16)
   InDateFrom     DateTime
   InDateTo       DateTime
OUTPUT//(Multiple)
   Id             int
   MessageID      int
   QueueID        char (16)
   MessageLen     int
   MessageType    int (XMLT=0 Text=1)
   DateCreated    datetime
   UserCreated   char (16)
   Status         int  (None=0 Pending=1 Complete=2 Error=3)
   USId           char (16)
   Tmstamp        timestamp
SQLCODE
   SELECT
     Id
     ,MessageID
     ,QueueID
     ,MessageLen
     ,MessageType
     ,DateCreated
     ,UserCreated
     ,Status
     ,USId
     ,Tmstamp
   FROM
      Reply
   WHERE
           MessageID = :InMessageID
      AND QueueId = :InQueue
      AND DateCreated between :InDateFrom
      AND                     :InDateTo  
      ORDER BY Id
ENDCODE

PROC StatusCount
INPUT
   InStatus      int
   InQueueID    char(16)
   InDateFrom    datetime
   InDateTo      datetime
OUTPUT(Single)
   Cnt           int
SQLCODE
   SELECT
      count(*)
   FROM
      Reply
   WHERE
         Status = :InStatus
     AND QueueID = :InQueueID
     AND DateCreated between :InDateFrom
     AND                     :InDateTo
ENDCODE

PROC StatusCountAll
INPUT
   InQueueID    char(16)
   InDateFrom    datetime
   InDateTo      datetime
OUTPUT(Single)
   Cnt           int
SQLCODE
   SELECT
      count(*)
   FROM
      Reply
   WHERE
     QueueID = :InQueueID
     AND DateCreated between :InDateFrom
     AND                     :InDateTo
ENDCODE

//# Used By Front End
PROC ByMessageID
INPUT
  InMessageId   int
OUTPUT//(Multiple)
  Id            int
  MessageID     int
  QueueID       char (16)
  MessageLen    int
  MessageType   int (XMLT=0 Text=1)
  DateCreated   datetime
  UserCreated   char (16)
  Status        int  (None=0 Pending=1 Complete=2 Error=3)
  USId          char (16)
  Tmstamp       timestamp
SQLCODE
    SELECT
      Id
      ,MessageID
      ,QueueID
      ,MessageLen
      ,MessageType
      ,DateCreated
      ,UserCreated
      ,Status
      ,USId
      ,Tmstamp
    FROM Reply
    WHERE
       MessageId = :InMessageId
ENDCODE

//# Used By Front End
PROC ByMessageIDData
INPUT
  InMessageId   int
OUTPUT
  Id            int
  MessageID     int
  QueueID       char (16)
  MessageLen    =
  MessageData   =
  MessageType   int (XMLT=0 Text=1)
  DateCreated   datetime
  Status        int  (None=0 Pending=1 Complete=2 Error=3)
  USId          char (16)
  Tmstamp       timestamp
SQLCODE
    SELECT
      Id
      ,MessageID
      ,QueueID
      ,MessageLen
      ,MessageData
      ,MessageType
      ,DateCreated
      ,Status
      ,USId
      ,Tmstamp
    FROM Reply
    WHERE
       MessageId = :InMessageId
ENDCODE

//# Used By PE Front End
PROC ByID
INPUT
   InID          int
OUTPUT(Single)
   Id            int
   MessageID     int
   QueueID       char (16)
   MessageLen    =
   MessageData   =
   MessageType   int (XMLT=0 Text=1)
   DateCreated   datetime
   UserCreated   char (16) NULL
   Status        int  (None=0 Pending=1 Complete=2 Error=3)
   USId          char (16)
   Tmstamp       timestamp
SQLCODE
   SELECT
     Id
     ,MessageID
     ,QueueID
     ,MessageLen
     ,MessageData
     ,MessageType
     ,DateCreated
     ,UserCreated
     ,Status
     ,USId
     ,Tmstamp
   FROM
      Reply
   WHERE
          Id = :InID
ENDCODE

PROC UpdQueue
INPUT
   InMsgNo     int
   InQueueID   char(16)
SQLCODE
   UPDATE
      Streams
   SET
      QueueID = :InQueueID
   WHERE
      Id = :InMsgNo
ENDCODE


