//#  $Revision: 172 $
//#
//#  $Date: 2008-05-08 13:32:04 +0200 (Thu, 08 May 2008) $
//#
//SERVER   @DN29_ATLAS
//CONNECT  NPUD00/CONTROL

DATABASE MCPE
PACKAGE  putty.bulk
//USING    Bbd.Portal
OUTPUT   Response
SERVER   PUTTY

TABLE   Response
  Id            identity
  MessageID     int
  Streamid      int
  Streamref     char (128) NULL
  Sourcequeue   char (16)
  QueueID       char (16)
  DateCreated   datetime
  Status        int    (Idle=0 Sent=1 Complete=2 Error=3)
  MessageLen    int
  MessageData   blob (64000)
  MessageType   int    (XMLT=0Text=1 File=2)
  USId          char (16)
  Tmstamp       timestamp

GRANT DELETE TO PUBLIC
GRANT INSERT TO PUBLIC
GRANT SELECT TO PUBLIC
GRANT UPDATE TO PUBLIC

KEY     SYS_C00808
PRIMARY
  ID

KEY ix01
  Streamid

KEY ix02
  DateCreated

KEY ix03
  MessageID

link Streams
   Streamid
// //   DELETE CASCADE

link Queue
   Queueid

link Message
  MessageID
//   DELETE CASCADE

PROC    Insert
PROC    Update
PROC    DeleteOne
PROC    SelectOne//  $PYTHON
PROC    SelectOneUpd
PROC    Exists
PROC    SelectAll
PROC    Count

// Used by front end tester
PROC ByQueueDate
INPUT
  QueueId      char(16)
  DateFrom     DateTime
  DateTo       DateTime
  MaxRows      int
OUTPUT //(Multiple)
  Id           int
  SourceSysid  char(16)
  Reference    char(64)
  MessageType  int
  DateCreated  DateTime
  Priority     int
  Status       int
SQLCODE
  select R.Id,  M.SourceSysid, M.Reference,  R.MessageType,
             R.DateCreated, M.Priority,  R.Status
  from Response R, Message M
  where R.QueueId = :QueUeId
  and R.DateCreated
    between :DateFrom and :DateTo
  and R.MessageId = M.Id
  and (:MaxRows <= 0 or :MaxRows >= ROWNUM)
ENDCODE

// Used by front end tester
PROC ByDate
INPUT
  DateFrom     DateTime
  DateTo       DateTime
  MaxRows      int
OUTPUT //(Multiple)
  Id           int
  QueueId      char(16)
  SourceSysid  char(16)
  Reference    char(64)
  MessageType  int
  DateCreated  DateTime
  Priority     int
  Status       int
SQLCODE
  select R.Id, R.QueueId, M.SourceSysid, M.Reference,  R.MessageType,
             R.DateCreated, M.Priority,  R.Status
  from Response R, Message M
  where R.DateCreated
    between :DateFrom and :DateTo
  and R.MessageId = M.Id
  and (:MaxRows <= 0 or :MaxRows >= ROWNUM)
ENDCODE

// Used by front end tester
PROC Queues
INPUT
  DateFrom     DateTime
  DateTo       DateTime
OUTPUT //(Multiple)
  Id Char(16)
  Name Char(64)
  Descr Char(256)
  NoOf int
SQLCODE
  select Q.Id, Q.Name, Q.Descr, count( *) NoOf
  from Queue Q, Response R
  where R.DateCreated
    between :DateFrom and :DateTo
  and R.QueueId = Q.Id
  group by Q.Id, Q.Name, Q.Descr
ENDCODE

// Used by front end tester
PROC GetData
INPUT
  Id           int
OUTPUT (Single)
  MessageType   int
  MessageLen    =
  MessageData   =
SQLCODE
  select MessageType, MessageLen, MessageData
  from Response
  where Id = :Id
ENDCODE

//# Used By Front End
PROC ByMessageID
INPUT
  InMessageId   int
OUTPUT//(Multiple)
  Id            int
  MessageID     int
  Streamid      int
  Streamref     char (128)
  Sourcequeue   char (16)
  QueueID       char (16)
  DateCreated   datetime
  Status        int    (Idle=0 Sent=1)
  MessageLen    int
  MessageType   int    (XMLT=0Text=1)
  USId          char (16)
  Tmstamp       timestamp
SQLCODE
    SELECT
      Id
      ,MessageID
      ,Streamid
      ,Streamref
      ,Sourcequeue
      ,QueueID
      ,DateCreated
      ,Status
      ,MessageLen
      ,MessageType
      ,USId
      ,Tmstamp
    FROM Response
    WHERE
       MessageId = :InMessageId
ENDCODE

//# Used By Front End
PROC ByMessageIDData
INPUT
  InMessageId   int
OUTPUT
  Id            int
  MessageID     int
  Streamid      int
  Streamref     char (128)
  Sourcequeue   char (16)
  QueueID       char (16)
  DateCreated   datetime
  Status        int    (Idle=0 Sent=1)
  MessageLen    =
  MessageData   =
  MessageType   int    (XMLT=0Text=1)
  USId          char (16)
  Tmstamp       timestamp
SQLCODE
    SELECT
      Id
      ,MessageID
      ,Streamid
      ,Streamref
      ,Sourcequeue
      ,QueueID
      ,DateCreated
      ,Status
      ,MessageLen
      ,MessageData
      ,MessageType
      ,USId
      ,Tmstamp
    FROM Response
    WHERE
       MessageId = :InMessageId
ENDCODE

//# Used By Router
PROC Response
INPUT
  Id            int
  QueueId       char  (16)
  USId          char  (16)
SQLCODE
    update
       Message
    SET
        QueueId = :QueueId
      , USId    = :USId
      , TMStamp = CURRENT_TIMESTAMP
    where
      Id = :Id
ENDCODE

//# used by Rutter
PROC ForUpd
INPUT
  Id            int
  QueueId       char  (16)
  Status        int
OUTPUT (single)
  MessageID     int
  Streamid      int
  Streamref     char (128)
  Sourcequeue   char (16)
//  QueueID       char (16)
  DateCreated   datetime
  Status        int
  MessageLen    =
  MessageData   =
  MessageType   int
  ResponseQueue char  (16)
SQLCODE
   SELECT
      r.MessageID
     ,r.Streamid
     ,r.Streamref
     ,r.Sourcequeue
     ,r.QueueID
     ,r.DateCreated
     ,r.Status
     ,r.MessageLen
     ,r.MessageData
     ,r.MessageType
     ,m.ResponseQueue
   FROM
      Response r, message m
   WHERE
          r.ID = :ID
      AND r.Queueid = :Queueid
      AND r.Status = :Status
      AND r.MessageID = m.id
      for update
ENDCODE

//# Used By Router
PROC Route
INPUT
  Id            int
  QueueId       char  (16)
  USId          char  (16)
SQLCODE
    update
       Response
    SET
        QueueId = :QueueId
      , USId    = :USId
      , TMStamp = CURRENT_TIMESTAMP
    where
      Id = :Id
ENDCODE

//# used by Rutter
PROC UpdStatus
INPUT
  Id            int
  Status        int
  USId          char  (16)
SQLCODE
  Update
    response
  Set
     Status = :Status
     ,USId = :USId
     ,TMStamp = CURRENT_TIMESTAMP
  where
     id = :Id
ENDCODE

//# Used By PE Front End
PROC ByQueue
INPUT
   InQueue        char(16)
   InStatus       int
   InDateFrom     DateTime
   InDateTo       DateTime
OUTPUT//(Multiple)
   Id            int
   MessageID     int
   Streamid      int
   Streamref     char (128)
   Sourcequeue   char (16)
   QueueID       char (16)
   DateCreated   datetime
   Status        int    (Idle=0 Sent=1 Complete=2 Error=3)
   MessageLen    int
   MessageType   int    (XMLT=0Text=1)
   USId          char (16)
   Tmstamp       timestamp
SQLCODE
   SELECT
     Id
     ,MessageID
     ,Streamid
     ,Streamref
     ,Sourcequeue
     ,QueueID
     ,DateCreated
     ,Status
     ,MessageLen
     ,MessageType
     ,USId
     ,Tmstamp
   FROM
     Response
   WHERE
          QueueId = :InQueue
      AND Status = :InStatus
      AND DateCreated between :InDateFrom
      AND                     :InDateTo
      ORDER BY Id
ENDCODE

//# Used By PE Front End
PROC ByQueueAll
INPUT
   InQueue        char(16)
   InDateFrom     DateTime
   InDateTo       DateTime
OUTPUT//(Multiple)
   Id            int
   MessageID     int
   Streamid      int
   Streamref     char (128)
   Sourcequeue   char (16)
   QueueID       char (16)
   DateCreated   datetime
   Status        int    (Idle=0 Sent=1 Complete=2 Error=3)
   MessageLen    int
   MessageType   int    (XMLT=0Text=1)
   USId          char (16)
   Tmstamp       timestamp
SQLCODE
   SELECT
     Id
     ,MessageID
     ,Streamid
     ,Streamref
     ,Sourcequeue
     ,QueueID
     ,DateCreated
     ,Status
     ,MessageLen
     ,MessageType
     ,USId
     ,Tmstamp
   FROM
     Response
   WHERE
          QueueId = :InQueue
      AND DateCreated between :InDateFrom
      AND                     :InDateTo
      ORDER BY Id
ENDCODE

//# Used By PE Front End
PROC ByStreamRefQueue
INPUT
   InStreamRef    char(128)
   InQueue        char(16)
   InDateFrom     DateTime
   InDateTo       DateTime
OUTPUT//(Multiple)
   Id            int
   MessageID     int
   Streamid      int
   Streamref     char (128)
   Sourcequeue   char (16)
   QueueID       char (16)
   DateCreated   datetime
   Status        int    (Idle=0 Sent=1 Complete=2 Error=3)
   MessageLen    int
   MessageType   int    (XMLT=0Text=1)
   USId          char (16)
   Tmstamp       timestamp
SQLCODE
   SELECT
     Id
     ,MessageID
     ,Streamid
     ,Streamref
     ,Sourcequeue
     ,QueueID
     ,DateCreated
     ,Status
     ,MessageLen
     ,MessageType
     ,USId
     ,Tmstamp
   FROM
     Response
   WHERE
     StreamRef = :InStreamRef
      AND QueueId = :InQueue
      AND DateCreated between :InDateFrom
      AND                     :InDateTo
      ORDER BY Id
ENDCODE

//# Used By PE Front End
PROC ByStreamRef
INPUT
   InStreamRef    char(128)
   InDateFrom     DateTime
   InDateTo       DateTime
OUTPUT//(Multiple)
   Id            int
   MessageID     int
   Streamid      int
   Streamref     char (128)
   Sourcequeue   char (16)
   QueueID       char (16)
   DateCreated   datetime
   Status        int    (Idle=0 Sent=1 Complete=2 Error=3)
   MessageLen    int
   MessageType   int    (XMLT=0Text=1)
   USId          char (16)
   Tmstamp       timestamp
SQLCODE
   SELECT
     Id
     ,MessageID
     ,Streamid
     ,Streamref
     ,Sourcequeue
     ,QueueID
     ,DateCreated
     ,Status
     ,MessageLen
     ,MessageType
     ,USId
     ,Tmstamp
   FROM
     Response
   WHERE
     StreamRef = :InStreamRef
      AND DateCreated between :InDateFrom
      AND                     :InDateTo
      ORDER BY Id
ENDCODE

PROC StatusCount
INPUT
   InStatus      int
   InQueueID    char(16)
   InDateFrom    datetime
   InDateTo      datetime
OUTPUT(Single)
   Cnt           int
SQLCODE
   SELECT
      count(*)
   FROM
      Response
   WHERE
         Status = :InStatus
     AND QueueID = :InQueueID
     AND DateCreated between :InDateFrom
     AND                     :InDateTo
ENDCODE

PROC StatusCountAll
INPUT
   InQueueID    char(16)
   InDateFrom    datetime
   InDateTo      datetime
OUTPUT(Single)
   Cnt           int
SQLCODE
   SELECT
      count(*)
   FROM
      Response
   WHERE
     QueueID = :InQueueID
     AND DateCreated between :InDateFrom
     AND                     :InDateTo
ENDCODE

//# Used By PE Front End
PROC ByID
INPUT
   InID          int
OUTPUT(Single)
   Id            int
   MessageID     int
   Streamid      int
   Streamref     char (128)
   Sourcequeue   char (16)
   QueueID       char (16)
   DateCreated   datetime
   Status        int    (Idle=0 Sent=1 Complete=2 Error=3)
   MessageLen    =
   MessageData   =
   MessageType   int    (XMLT=0Text=1)
   USId          char (16)
   Tmstamp       timestamp
SQLCODE
   SELECT
     Id
     ,MessageID
     ,Streamid
     ,Streamref
     ,Sourcequeue
     ,QueueID
     ,DateCreated
     ,Status
     ,MessageLen
     ,MessageData
     ,MessageType
     ,USId
     ,Tmstamp
   FROM
      Response
   WHERE
          Id = :InID
ENDCODE

PROC UpdQueue
INPUT
   InMsgNo     int
   InQueueID   char(16)
SQLCODE
   UPDATE
      Streams
   SET
      QueueID = :InQueueID
   WHERE
      Id = :InMsgNo
ENDCODE

//# Used By PE Front End
//# Used by router
PROC ByStreamID//  $PYTHON
INPUT
   InStreamID    int
OUTPUT
   Id            int
   MessageID     int
   Streamid      int
   Streamref     char (128)
   Sourcequeue   char (16)
   QueueID       char (16)
   DateCreated   datetime
   Status        int    (Idle=0 Sent=1 Complete=2 Error=3)
   MessageLen    =
   MessageData   =
   MessageType   int    (XMLT=0Text=1)
   USId          char (16)
   Tmstamp       timestamp
SQLCODE
   SELECT
     Id
     ,MessageID
     ,Streamid
     ,Streamref
     ,Sourcequeue
     ,QueueID
     ,DateCreated
     ,Status
     ,MessageLen
     ,MessageData
     ,MessageType
     ,USId
     ,Tmstamp
   FROM
      Response
   WHERE
          StreamId = :InStreamID
ENDCODE

//# used by IDE
PROC TVSlurpIDs
OUTPUT //(Multiple)
  Id            identity
  Reference     char  (64)
SQLCODE
  SELECT
    Id,
    StreamRef
  FROM
     Response
  Where
     $WhereClause(2048)
ENDCODE

//# used by IDE
PROC TVCount
OUTPUT (Single)
  ans       Int
SQLCODE
  SELECT
     count( *)
  FROM
     Response
  Where
     $WhereClause(2048)
ENDCODE


//# Used By filemqout
PROC GetByMsgID
INPUT
   MessageID    int
   MessageType  int    (XMLT=0Text=1  File=2)
OUTPUT
   MessageLen    =
   MessageData   =
SQLCODE
   SELECT
      MessageLen
     ,MessageData
   FROM
      Response
   WHERE
      MessageID = :MessageID and MessageType = :MessageType
ENDCODE


