//  &Revision: 348 &
//
//  &Date: 2011-01-24 14:11:52 +0200 (Mon, 24 Jan 2011) &
//
DATABASE VLAB 
PACKAGE  vlab.mcpe
OUTPUT   reply
SERVER   LV01
SCHEMA   DBUD00
USERID   dbu
PASSWORD dbudev

TABLE   Reply
  Id            Sequence
  MessageID     int      
  QueueID       char (16)
  MessageLen    int         //int creates number(10) which is out of sync with the database number(5)
  MessageData   blob (32000)
  MessageType   byte     (XMLDATA=0 Text=1 File=2)
  DateCreated   timestamp
  UserCreated   char (16) NULL
  Status        byte  (None=0 Sent=1 Complete=2 Error=3)
  USId          char (16)
  Tmstamp       timestamp

GRANT DELETE TO PUBLIC
GRANT INSERT TO PUBLIC
GRANT SELECT TO PUBLIC
GRANT UPDATE TO PUBLIC

KEY     SYS_C00808
PRIMARY
  ID

KEY key1
  MessageID

KEY key2
  QueueId
  Status

link Message
   MessageID
   //DELETE CASCADE

link Queue
   Queueid


PROC    Insert
PROC    Update
PROC    DeleteOne
PROC    SelectOne 
PROC    SelectOneUpd
PROC    Exists
PROC    SelectAll
PROC    Count

// used by tcpout
PROC GetById
INPUT
  Id            Int
OUTPUT (Single)
  Id            int
  MessageID     int
  MessageLen    =
  MessageData   =
  MessageType   byte   
  Status        byte
  Reference     char  (64)
sqlcode
  SELECT
    r.Id           ,
    r.MessageID    ,
    r.MessageLen   ,
    r.MessageData  ,
    r.MessageType  ,
    r.Status       ,
    m.Reference
  FROM
     Reply r, Message m
  Where
         r.id = :id
     and m.id = r.messageid
ENDCODE

// used by tcpout
PROC Queued
INPUT
  Queue         char  (16)
  DayInterval   int
  Status        byte   
OUTPUT (1000)
  Id            Int
sqlcode
  SELECT
     Id
  FROM
     Reply
  Where
     Queueid = :Queue
     and Status = :Status
     and DateCreated <= sysdate
     and DateCreated > (sysdate - :DayInterval)
  ORDER BY Id
ENDCODE

// used by tcpout
PROC UpdateStatus
INPUT
  Id            Int
  Status        byte   
  USId          char  (16)
sqlcode
    update Reply set
      Status  = :Status
    , USId    = :USId
    , TMStamp = SYSDATE
    where Id = :Id
ENDCODE

// Used by front end tester
PROC ByQueueDate
INPUT
  QueueId      char(16)
  DateFrom     DateTime
  DateTo       DateTime
  MaxRows      int
OUTPUT (1000)
  Id           int
  SourceSysid  char(16)
  Reference    char(64)
  MessageType  byte   
  DateCreated  DateTime
  Priority     byte   
  Status       byte   
sqlcode
  select R.Id,  M.SourceSysid, M.Reference,  R.MessageType,
             to_char(R.DateCreated, 'YYYYMMDDHH24MISS'), M.Priority,  R.Status
  from Reply R, Message M
  where R.QueueId = :QueUeId
  and R.DateCreated
    between to_date(:DateFrom, 'YYYYMMDDHH24MISS') and to_date(:DateTo  , 'YYYYMMDDHH24MISS')
  and R.MessageId = M.Id
  and (:MaxRows <= 0 or :MaxRows >= ROWNUM)
ENDCODE

// Used by front end tester
PROC ByDate
INPUT
  DateFrom     DateTime
  DateTo       DateTime
  MaxRows      int
OUTPUT (1000)
  Id           int
  QueueId      char(16)
  SourceSysid  char(16)
  Reference    char(64)
  MessageType  byte   
  DateCreated  DateTime
  Priority     byte   
  Status       byte   
sqlcode
  select R.Id, R.QueueId, M.SourceSysid, M.Reference,  R.MessageType,
             to_char(R.DateCreated, 'YYYYMMDDHH24MISS'), M.Priority,  R.Status
  from Reply R, Message M
  where R.DateCreated
    between to_date(:DateFrom, 'YYYYMMDDHH24MISS') and to_date(:DateTo  , 'YYYYMMDDHH24MISS')
  and R.MessageId = M.Id
  and (:MaxRows <= 0 or :MaxRows >= ROWNUM)
ENDCODE

// Used by front end tester
PROC Queues
INPUT
  DateFrom     DateTime
  DateTo       DateTime
OUTPUT (1000)
  Id Char(16)
  Name Char(64)
  Descr Char(256)
  NoOf int
sqlcode
  select Q.Id, Q.Name, Q.Descr, count(*) NoOf
  from Queue Q, Reply R
  where R.DateCreated
    between to_date(:DateFrom, 'YYYYMMDDHH24MISS') and to_date(:DateTo  , 'YYYYMMDDHH24MISS')
  and R.QueueId = Q.Id
  group by Q.Id, Q.Name, Q.Descr
ENDCODE

// Used by front end tester
PROC GetData
INPUT
  Id           int
OUTPUT (Single)
  MessageType   byte   
  MessageLen    =
  MessageData   =
sqlcode
  select MessageType, MessageLen, MessageData
  from Reply
  where Id = :Id
ENDCODE

// Used By Router
PROC Route
INPUT
  Id            int
  QueueId       char  (16)
  USId          char  (16)
sqlcode
    update
       Reply
    SET
        QueueId = :QueueId
      , USId    = :USId
      , TMStamp = SYSDATE
    where
      Id = :Id
ENDCODE


// used by Rutter
PROC ForUpd
INPUT
  Id            int
  QueueId       char  (16)
  Status        byte   
OUTPUT (single)
  MessageID         int
  QueueID           char (16)
  MessageLen        =
  MessageData       =
  MessageType       byte   
  DateCreated       datetime
  Status            byte
  ResponseQueue     char  (16)
  MessageReference  char  (64)
sqlcode
   SELECT
      r.MessageID
     ,r.QueueID
     ,r.MessageLen
     ,r.MessageData
     ,r.MessageType
     ,to_char(r.DateCreated, 'YYYYMMDDHH24MISS')
     ,r.Status
     ,m.ResponseQueue
     ,m.Reference
   FROM
      Reply r, Message m
   WHERE
          r.ID = :ID
      AND r.Queueid = :Queueid
      AND r.Status = :Status
      and m.id = r.MessageID
      for update
ENDCODE

// used by Rutter
PROC ForUpdeximbill
INPUT
  Id            int
  QueueId       char  (16)
  Status        byte   
OUTPUT (single)
  MessageID     int
  QueueID       char (16)
  MessageLen    =
  MessageData   =
  MessageType   byte   
  DateCreated   datetime
  Status        byte
  ResponseQueue char  (16)
  MessageReference char(64)
sqlcode
   SELECT
      r.MessageID
     ,r.QueueID
     ,r.MessageLen
     ,r.MessageData
     ,r.MessageType
     ,to_char(r.DateCreated, 'YYYYMMDDHH24MISS')
     ,r.Status
     ,m.ResponseQueue
     ,m.Reference
   FROM
      Reply r, Message m
   WHERE
          r.ID = :ID
      AND r.Queueid = :Queueid
      AND r.Status = :Status
      and m.id = r.MessageID
      for update
ENDCODE

// used by Rutter
PROC UpdStatus
INPUT
  Id            int
  Status        byte   
  USId          char  (16)
sqlcode
  Update
    Reply
  Set
     Status = :Status
     ,USId = :USId
     ,TMStamp = SYSDATE
  where
     id = :Id
ENDCODE

// Used By PE Front End
PROC ByQueue
INPUT
   InQueue        char(16)
   InStatus       byte   
   InDateFrom     DateTime
   InDateTo       DateTime
OUTPUT(1000)
   Id             int
   MessageID      int
   QueueID        char (16)
   MessageLen     int
   MessageType    byte     (XMLDATA=0 Text=1)
   DateCreated    datetime
   UserCreated   char (16)
   Status         byte  (None=0 Pending=1 Complete=2 Error=3)
   USId           char (16)
   Tmstamp        timestamp
sqlcode
   SELECT
     Id
     ,MessageID
     ,QueueID
     ,MessageLen
     ,MessageType
     ,to_char(DateCreated, 'YYYYMMDDHH24MISS')
     ,UserCreated
     ,Status
     ,USId
     ,to_char(Tmstamp, 'YYYYMMDDHH24MISS')
   FROM
      Reply
   WHERE
          QueueId = :InQueue
      AND Status = :InStatus
      AND DateCreated between to_date(:InDateFrom, 'YYYYMMDDHH24MISS')
      AND                     to_date(:InDateTo  , 'YYYYMMDDHH24MISS')
      ORDER BY Id
ENDCODE

// Used By PE Front End
PROC ByQueueAll
INPUT
   InQueue        char(16)
   InDateFrom     DateTime
   InDateTo       DateTime
OUTPUT(1000)
   Id             int
   MessageID      int
   QueueID        char (16)
   MessageLen     int
   MessageType    byte     (XMLDATA=0 Text=1)
   DateCreated    datetime
   Status         byte  (None=0 Pending=1 Complete=2 Error=3)
   USId           char (16)
   Tmstamp        timestamp
sqlcode
   SELECT
     Id
     ,MessageID
     ,QueueID
     ,MessageLen
     ,MessageType
     ,to_char(DateCreated, 'YYYYMMDDHH24MISS')
     ,Status
     ,USId
     ,Tmstamp
   FROM
      Reply
   WHERE
          QueueId = :InQueue
      AND DateCreated between to_date(:InDateFrom, 'YYYYMMDDHH24MISS')
      AND                     to_date(:InDateTo  , 'YYYYMMDDHH24MISS')
      ORDER BY Id
ENDCODE

// Used By PE Front End
PROC ByMsgIDQueue
INPUT
   InMessageID    int
   InQueue        char(16)
   InDateFrom     DateTime
   InDateTo       DateTime
OUTPUT(1000)
   Id             int
   MessageID      int
   QueueID        char (16)
   MessageLen     int
   MessageType    byte     (XMLDATA=0 Text=1)
   DateCreated    datetime
   UserCreated   char (16)
   Status         byte  (None=0 Pending=1 Complete=2 Error=3)
   USId           char (16)
   Tmstamp        timestamp
sqlcode
   SELECT
     Id
     ,MessageID
     ,QueueID
     ,MessageLen
     ,MessageType
     ,to_char(DateCreated, 'YYYYMMDDHH24MISS')
     ,UserCreated
     ,Status
     ,USId
     ,to_char(Tmstamp, 'YYYYMMDDHH24MISS')
   FROM
      Reply
   WHERE
           MessageID = :InMessageID
      AND QueueId = :InQueue
      AND DateCreated between to_date(:InDateFrom, 'YYYYMMDDHH24MISS')
      AND                     to_date(:InDateTo  , 'YYYYMMDDHH24MISS')
      ORDER BY Id
ENDCODE

PROC StatusCount
INPUT
   InStatus      byte   
   InQueueID    char(16)
   InDateFrom    datetime
   InDateTo      datetime
OUTPUT(Single)
   Cnt           int
sqlcode
   SELECT
      count(*)
   FROM
      Reply
   WHERE
         Status = :InStatus
     AND QueueID = :InQueueID
     AND DateCreated between to_date(:InDateFrom, 'YYYYMMDDHH24MISS')
     AND                     to_date(:InDateTo  , 'YYYYMMDDHH24MISS')
ENDCODE

PROC StatusCountAll
INPUT
   InQueueID    char(16)
   InDateFrom    datetime
   InDateTo      datetime
OUTPUT(Single)
   Cnt           int
sqlcode
   SELECT
      count(*)
   FROM
      Reply
   WHERE
     QueueID = :InQueueID
     AND DateCreated between to_date(:InDateFrom, 'YYYYMMDDHH24MISS')
     AND                     to_date(:InDateTo  , 'YYYYMMDDHH24MISS')
ENDCODE

// Used By Front End
PROC ByMessageID
INPUT
  InMessageId   int
OUTPUT(1000)
  Id            int
  MessageID     int
  QueueID       char (16)
  MessageLen    int
  MessageType   byte     (XMLDATA=0 Text=1)
  DateCreated   datetime
  UserCreated   char (16)
  Status        byte  (None=0 Pending=1 Complete=2 Error=3)
  USId          char (16)
  Tmstamp       timestamp
sqlcode
    SELECT
      Id
      ,MessageID
      ,QueueID
      ,MessageLen
      ,MessageType
      ,to_char(DateCreated, 'YYYYMMDDHH24MISS')
      ,UserCreated
      ,Status
      ,USId
      ,to_char(Tmstamp, 'YYYYMMDDHH24MISS')
    FROM Reply
    WHERE
       MessageId = :InMessageId
ENDCODE

// Used By Front End
PROC ByMessageIDData
INPUT
  InMessageId   int
OUTPUT
  Id            int
  MessageID     int
  QueueID       char (16)
  MessageLen    =
  MessageData   =
  MessageType   byte     (XMLDATA=0 Text=1)
  DateCreated   datetime
  Status        byte  (None=0 Pending=1 Complete=2 Error=3)
  USId          char (16)
  Tmstamp       timestamp
sqlcode
    SELECT
      Id
      ,MessageID
      ,QueueID
      ,MessageLen
      ,MessageData
      ,MessageType
      ,to_char(DateCreated, 'YYYYMMDDHH24MISS')
      ,Status
      ,USId
      ,to_char(Tmstamp, 'YYYYMMDDHH24MISS')
    FROM Reply
    WHERE
       MessageId = :InMessageId
ENDCODE

// Used By PE Front End
PROC ByID
INPUT
   InID          int
OUTPUT(Single)
   Id            int
   MessageID     int
   QueueID       char (16)
   MessageLen    =
   MessageData   =
   MessageType   byte     (XMLDATA=0 Text=1)
   DateCreated   datetime
   UserCreated   char (16) NULL
   Status        byte  (None=0 Pending=1 Complete=2 Error=3)
   USId          char (16)
   Tmstamp       timestamp
sqlcode
   SELECT
     Id
     ,MessageID
     ,QueueID
     ,MessageLen
     ,MessageData
     ,MessageType
     ,to_char(DateCreated, 'YYYYMMDDHH24MISS')
     ,UserCreated
     ,Status
     ,USId
     ,to_char(Tmstamp, 'YYYYMMDDHH24MISS')
   FROM
      Reply
   WHERE
          Id = :InID
ENDCODE

PROC UpdQueue
INPUT
   InMsgNo     int
   InQueueID   char(16)
sqlcode
   UPDATE
      Streams
   SET
      QueueID = :InQueueID
   WHERE
      Id = :InMsgNo
ENDCODE


